{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/utils.js","webpack:///./src/person.js","webpack:///./src/app.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","console","log"],"mappings":"aACA,IAAAA,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,IACAG,EAAAH,EACAI,GAAA,EACAH,YAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,GAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,aAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,GAIAlC,IAAAmC,EAAA,mBClFAC,QAAQC,IAAI,iECAZD,QAAQC,IAAI,wBCGZD,QAAQC,IAAI","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","console.log(\"utils.js is running\")","console.log(\"person.js is running\")\n\nexport const isAdult = (age) => age > 18;\nexport const canDrink = (age) => age > 21;","import './utils.js'\nimport './person.js'\n\nconsole.log(\"app.js is running\")\n\n// class IndecisionApp extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.handleDeleteOptions = this.handleDeleteOptions.bind(this);\n//         this.handlePick = this.handlePick.bind(this);\n//         this.handleAddOption = this.handleAddOption.bind(this);\n//         this.handleDeleteOption = this.handleDeleteOption.bind(this);\n//         this.state = {\n//             options: []\n//         };\n//     }\n//     // Fetch Data\n//     componentDidMount() {\n//         try\n//         {\n//             const json = localStorage.getItem('options');\n//             const options = JSON.parse(json);\n    \n//             if (options)\n//             {\n//                 this.setState(() => ({ options }));\n//             }\n//         }\n//         catch (e)\n//         {\n//             // Do nothing\n//         }\n//     }\n//     // Save Data\n//     componentDidUpdate(prevProps, prevState) {\n//         if (prevState.options.length !== this.state.options.length)\n//         {\n//             const json = JSON.stringify(this.state.options);\n//             localStorage.setItem('options', json);\n//         }\n//     }\n//     componentWillUnmount() {\n//         console.log('componentWillUnmount');\n//     }\n//     handleDeleteOptions() {\n//         this.setState(() => ({ options: [] }))\n//     }\n//     handleDeleteOption(optionToRemove) {\n//         this.setState((prevState) => ({\n//             options: prevState.options.filter((option) => optionToRemove !== option)\n//         }));\n//     }\n//     handlePick() {\n//         const random_num = Math.floor(Math.random() * this.state.options.length);\n//         const option = this.state.options[random_num];\n//         console.log(option);\n//         alert(option);\n//     }\n//     handleAddOption(option) {\n//         if (!option)\n//         {\n//             return 'Enter valid value to add item';\n//         }\n//         else if (this.state.options.indexOf(option) > -1)\n//         {\n//             return 'This option already exists'\n//         }\n\n//         this.setState((prevState) => ({ options: prevState.options.concat(option) }));\n//     }\n//     render() {\n//         const subtitle = \"Put your life in the hands of a computer\"\n\n//         return (\n//             <div>\n//                 <Header subtitle={subtitle} />\n//                 <Action \n//                     hasOptions={this.state.options.length > 0}\n//                     handlePick={this.handlePick}\n//                 />\n//                 <Options \n//                     options={this.state.options} \n//                     handleDeleteOptions={this.handleDeleteOptions}\n//                     handleDeleteOption={this.handleDeleteOption}\n//                 />\n//                 <AddOption \n//                     handleAddOption={this.handleAddOption}\n//                 />\n//             </div>\n//         )\n//     }\n// }\n\n// const Header = (props) => {\n//     return (\n//         <div>\n//             <h1>{props.title}</h1>\n//             {props.subtitle && <h2>{props.subtitle}</h2>}\n//         </div>\n//     )    \n// };\n\n// Header.defaultProps = {\n//     title: 'Indecision'\n// };\n\n// const Action = (props) => {\n//     return (\n//         <div>\n//             <button \n//                 onClick={props.handlePick}\n//                 disabled={!props.hasOptions}\n//             >\n//                 What should I do?\n//             </button>\n//         </div>\n//     )    \n// };\n\n// const Options = (props) => {\n//     return (\n//         <div>\n//             <button onClick={props.handleDeleteOptions}>Remove All</button>\n//             {props.options.length === 0 && <p>Please add an option to get started!</p>}\n//             <ol>\n//                 {\n//                     props.options.map(option => (\n//                         <Option \n//                             key={option} \n//                             optionText={option}\n//                             handleDeleteOption={props.handleDeleteOption}\n//                         />\n//                     ))\n//                 }\n//             </ol>\n//         </div>\n//     )\n// };\n\n// const Option = (props) => {\n//     return (\n//         <div>\n//             {props.optionText}\n//             <button \n//                 onClick={(e) => {\n//                     props.handleDeleteOption(props.optionText);\n//                 }}\n//             >\n//                 Remove\n//             </button>\n//         </div>\n//     )\n// };\n\n// class AddOption extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.handleAddOption = this.handleAddOption.bind(this);\n//         this.state = {\n//             error: undefined\n//         };\n//     }\n//     handleAddOption(e) {\n//         e.preventDefault();\n\n//         const option = e.target.elements.option.value.trim();\n//         const error = this.props.handleAddOption(option);\n        \n//         this.setState(() => ({ error }));\n\n//         if (!error)\n//         {\n//             e.target.elements.option.value = '';\n//         }\n//     }\n//     render() {\n//         return (\n//             <div>\n//                 {this.state.error && <p>{this.state.error}</p>}\n//                 <form onSubmit={this.handleAddOption}>\n//                     <input type=\"text\" name=\"option\"/>\n//                     <button>Add Option</button>\n//                 </form>\n//             </div>\n//         )\n//     }\n// }\n\n// ReactDOM.render(<IndecisionApp />, document.getElementById(\"app\"));"],"sourceRoot":""}